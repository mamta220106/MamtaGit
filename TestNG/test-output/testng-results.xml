<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-09T10:43:42 EST" name="Suite" finished-at="2023-02-09T10:43:42 EST" duration-ms="89">
    <groups>
    </groups>
    <test started-at="2023-02-09T10:43:42 EST" name="Test" finished-at="2023-02-09T10:43:42 EST" duration-ms="89">
      <class name="testng1.Test2">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:testng1.Test2@5ace1ed4]" started-at="2023-02-09T10:43:42 EST" name="beforesuite" finished-at="2023-02-09T10:43:42 EST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method signature="Test21()[pri:0, instance:testng1.Test2@5ace1ed4]" started-at="2023-02-09T10:43:42 EST" name="Test21" finished-at="2023-02-09T10:43:42 EST" duration-ms="17" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testng1.Test2.Test21(Test2.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test21 -->
        <test-method signature="Test22()[pri:0, instance:testng1.Test2@5ace1ed4]" started-at="2023-02-09T10:43:42 EST" name="Test22" finished-at="2023-02-09T10:43:42 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test22 -->
        <test-method is-config="true" signature="aftersuite()[pri:0, instance:testng1.Test2@5ace1ed4]" started-at="2023-02-09T10:43:42 EST" name="aftersuite" finished-at="2023-02-09T10:43:42 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testng1.Test2 -->
      <class name="testng1.Test1">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:testng1.Test1@1cbb87f3]" started-at="2023-02-09T10:43:42 EST" name="beforetest" finished-at="2023-02-09T10:43:42 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testng1.Test1@1cbb87f3]" started-at="2023-02-09T10:43:42 EST" name="beforeclass" finished-at="2023-02-09T10:43:42 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.Test1@1cbb87f3]" started-at="2023-02-09T10:43:42 EST" name="beforemethod" finished-at="2023-02-09T10:43:42 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Test11()[pri:0, instance:testng1.Test1@1cbb87f3]" started-at="2023-02-09T10:43:42 EST" name="Test11" finished-at="2023-02-09T10:43:42 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test11 -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.Test1@1cbb87f3]" started-at="2023-02-09T10:43:42 EST" name="beforemethod" finished-at="2023-02-09T10:43:42 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="Test12()[pri:0, instance:testng1.Test1@1cbb87f3]" started-at="2023-02-09T10:43:42 EST" name="Test12" finished-at="2023-02-09T10:43:42 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test12 -->
      </class> <!-- testng1.Test1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
